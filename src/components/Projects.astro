---
import Spring from "./icons/Spring.astro";
import TypeScript from "./icons/TypeScript.astro";
import React from "./icons/Angular.astro";
import JavaIcon from "./icons/JavaIcon.astro";
import GitHub from "./icons/GitHub.astro";
import Web from "./icons/web.astro";

const TAGS = {
  BACKEND: {
    name: "Backend",
    class: "bg-black text-white",
    icon: GitHub,
    url: "https://github.com/luisxsssx/files.git",
  },
  REPO: {
    name: "Frontend",
    class: "bg-black text-white",
    icon: GitHub,
    url: "https://github.com/luisxsssx/password-generator.git",
  },
  DEMO: {
    name: "Demo",
    class: "bg-black text-white",
    icon: Web,
    url: "https://password-manager-3atbocmu0-luisxsssxs-projects.vercel.app/",
  },
  FRONTEND: {
    name: "Frontend",
    class: "bg-black text-white",
    icon: GitHub,
    url: "https://github.com/luisxsssx/files-frontend.git",
  },
  SPRING: {
    name: "SpringBoot",
    class: "bg-black text-white",
    icon: Spring,
    url: "",
  },
  ANGULAR: {
    name: "Angular",
    class: "bg-black text-white",
    icon: React,
    url: "",
  },
  TYPESCRIPT: {
    name: "TypeScript",
    class: "bg-black text-white",
    icon: TypeScript,
    url: "",
  },
  JAVA: {
    name: "Java",
    class: "bg-black text-white",
    icon: JavaIcon,
    url: "",
  },
};

const PROJECTS = [
  {
    title: "PASSWORD MANAGER",
    description:
      "Este proyecto es un gestor de contraseñas que permite a los usuarios generar contraseñas seguras y cifrar/descifrar texto mediante el algoritmo AES-256-CBC. Es una aplicación web construida con Angular en el frontend y utiliza CryptoJS para el cifrado y descifrado de datos..",
    image: "/projects/password.webp",
    tags: [TAGS.REPO, TAGS.DEMO, TAGS.ANGULAR, TAGS.TYPESCRIPT],
  },
  {
    title: "HOME CLOUD",
    description:
      "En este proyecto personal, he creado una solución de almacenamiento en la nube inspirada en Google Drive, que permite gestionar y acceder a tus archivos de forma segura y eficiente. **Nota: Este proyecto aún está en desarrollo.**",
    image: "/projects/files.webp",
    tags: [
      TAGS.BACKEND,
      TAGS.FRONTEND,
      TAGS.JAVA,
      TAGS.SPRING,
      TAGS.ANGULAR,
      TAGS.TYPESCRIPT,
    ],
  },
];
---

{
  PROJECTS.map(({ image, title, description, tags }) => (
    <article>
      <h3 class="text-2xl font-semibold text-yellow-800 dark:text-yellow-200 mb-2">
        {title}
      </h3>
      <p class="text-lg mb-4 text-pretty">{description}</p>
      <ul class="flex gap-x-2 flex-row mb-2">
        {tags.map((tag) => (
          <li>
            {tag.url ? (
              <a
                href={tag.url}
                target="_blank"
                rel="noopener noreferrer"
                class={`flex gap-x-2 rounded-lg text-xs ${tag.class} py-1 px-2 border border-white/10`}
              >
                <tag.icon class="size-4" />
                {tag.name}
              </a>
            ) : (
              <span
                class={`flex gap-x-2 rounded-lg text-xs ${tag.class} py-1 px-2 border border-white/10`}
              >
                <tag.icon class="size-4" />
                {tag.name}
              </span>
            )}
          </li>
        ))}
      </ul>

      <img
        loading="lazy"
        src={image}
        loading="lazy"
        class="rounded-lg shadow-2xl shadow-white/10 aspect-video"
        alt={`Captura de pantalla del proyecto ${image}`}
      />

      <br />
    </article>
  ))
}
